---
import { site } from '@src/constants'
---

<a
  href="/"
  class="relative inline-block font-display text-2xl font-light text-stone-700 no-underline hover:text-highlight dark:text-stone-100"
>
  <span class="drop-shadow-header">{site.title}</span>
  <span
    aria-hidden="true"
    class="absolute left-0 z-10 h-[125%] w-full overflow-hidden"
  >
    <span
      id="wavy"
      class="relative whitespace-nowrap text-transparent underline decoration-highlight decoration-wavy"
      style={{ left: 'var(--offset, 0%)', textDecorationSkipInk: 'none' }}
    ></span>
  </span>
</a>

<script>
  const wavy = document.getElementById('wavy')
  const startHue = parseInt(
    getComputedStyle(document.documentElement).getPropertyValue('--hue')
  )

  const onScroll = () => {
    const offset = window.pageYOffset
    if (wavy) {
      wavy.style.setProperty(
        '--offset',
        `${offset <= -100 ? -200 : (offset % 100) - 100}%`
      )
    }

    document.documentElement.style.setProperty(
      '--hue',
      `${startHue + offset / 10}`
    )
  }

  const scrollEventListener = (hasReducedMotion: boolean) =>
    hasReducedMotion
      ? window.removeEventListener('scroll', onScroll)
      : window.addEventListener('scroll', onScroll)

  const reducedMotion = window.matchMedia('(prefers-reduced-motion: reduce)')
  reducedMotion.addEventListener('change', ({ matches: hasReducedMotion }) =>
    scrollEventListener(hasReducedMotion)
  )

  window.addEventListener('load', () => {
    if (wavy) {
      const title = document.querySelector('a[href="/"] > span:first-of-type')
      const site = title?.textContent?.trim() ?? ''

      wavy.innerText = `${site} ${site}`
      scrollEventListener(reducedMotion.matches)
    }
  })
</script>
