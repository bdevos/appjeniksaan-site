---
import { site } from '@src/constants'
---

<a
  href="/"
  class="relative inline-block overflow-hidden pb-1 font-display text-2xl font-light text-stone-700 no-underline hover:text-highlight dark:text-stone-100"
>
  {site.title}

  <div
    id="wavy"
    aria-hidden="true"
    class="absolute left-0 top-0 z-10 whitespace-nowrap text-transparent underline decoration-highlight decoration-wavy"
    style={{
      textDecorationSkipInk: 'none',
      transform: 'translateX(var(--offset, 0%))',
    }}
  >
  </div>
</a>

<script>
  const slowDownFactor = 0.5
  const hueChangeFactor = 0.1
  const wavy = document.getElementById('wavy')
  const startHue = getComputedStyle(document.documentElement).getPropertyValue(
    '--hue'
  )

  console.log({ startHue })

  const onScroll = () => {
    const offset = window.pageYOffset
    const newHue = startHue + Math.max(offset, 0) * hueChangeFactor

    document.documentElement.style.setProperty('--hue', `${newHue}`)

    if (wavy) {
      const wavyOffset = (((offset * slowDownFactor) % 100) / 2) * -1
      wavy.style.setProperty('--offset', `${wavyOffset}%`)
    }
  }

  const scrollEventListener = (hasReducedMotion: boolean) =>
    hasReducedMotion
      ? window.removeEventListener('scroll', onScroll)
      : window.addEventListener('scroll', onScroll)

  const reducedMotion = window.matchMedia('(prefers-reduced-motion: reduce)')
  reducedMotion.addEventListener('change', ({ matches: hasReducedMotion }) =>
    scrollEventListener(hasReducedMotion)
  )

  window.addEventListener('load', () => {
    if (wavy) {
      const title = document.querySelector('a[href="/"]')
      const site = title?.textContent?.trim() ?? ''

      wavy.innerText = `${site} ${site}`
      scrollEventListener(reducedMotion.matches)
    }
  })
</script>
